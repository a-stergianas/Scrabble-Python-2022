from classes import *
import json


def guidelines():
    """
        Για την δημιουργία του παιχνιδιού έχουν δημιουργηθεί οι κλάσεις: SakClass, Player, Human, Computer, Game.

        Οι κλάσεις Human και Computer είναι παράγωγες της βασικής κλάσης Player από την οποία κληρονομούν τις μεθόδους __init__, __repr__, printLettersInHand.

        Οι αποδεκτές λέξεις της γλώσσας αποθηκεύονται στην αρχή του παιχνιδιού σε ένα λεξικό με όνομα "dictionary".

        Ο Η/Υ παίζει με βάση τον αλγόριθμο Min-Max_Smart.

        ...

        (Η επιλογή στα μενού γίνεται με τον αριθμό/γράμμα που αναγράφεται σε κάθε επιλογή.)

        Στο αρχικό μενού:

        Με την επιλογή "Σκορ" εμφανίζεται μια λίστα με τα ονόματα που έχουν νικήσει τον υπολογιστή μαζί με τον αριθμό των νικών τους.

        Με την επιλογή "Ρυθμίσεις" εμφανίζεται ένα υπομενού απ' όπου μπορούμε να επιλέξουμε τον αλγόριθμο με τον οποίο θα παίζει ο Η/Υ.

        Με την επιλογή "Παιχνίδι" ξεκινάει το παιχνίδι (αναλυτικότερα παρακάτω).

        Με την επιλογή "Έξοδος" τερματίζει το πρόγραμμα.

        ...

        Το παιχνίδι:

        Με την έναρξη του παιχνιδιού μας ζητάται να εισάγουμε το όνομα μας.

        Στη συνέχεια ξεκινάει το παιχνίδι. Πρώτοι παίζουμε εμείς.

        Μας έχουν μοιραστεί από 7 γράμματα σε εμάς και στον υπολογιστή.

        Δίπλα σε κάθε γράμμα βλέπουμε την αξία του κάθε γράμματος σε βαθμούς.

        Με αυτά τα 7 γράμματα προσπαθούμε να σχηματίσουμε μία έγκυρη λέξη η οποία να αξίζει όσο το δυνατόν περισσότερους βαθμούς.

        Την λέξη θα πρέπει να την γράψουμε στα Ελληνικά και στα κεφαλαία και στη συνέχεια να πατήσουμε το Enter.

        Το παιχνίδι θα μας ενημερώσει αν η λέξη μας είναι αποδεκτή με βάση το λεξικό και τα γράμματα που έχουμε στη διάθεσή μας.

        Αν είναι θα πάρουμε τόσα γράμματα όσα η λέξη που δώσαμε έτσι ώστε να έχουμε ξανά 7 γράμματα.

        Αν δεν μπορούμε να βρούμε κάποια λέξη μπορούμε να πληκτρολογήσουμε "p" που σημαίνει ότι "πάμε πάσο".

        Αυτό σημαίνει ότι επιστρέφουμε και τα 7 γράμματα μας στο σακουλάκι και παίρνουμε ξανά 7 γράμματα.

        ΠΡΟΣΟΧΗ! Δεν μπορούμε να "πάμε πάσο" αν υπάρχουν λιγότερα από 7 γράμματα στο σακουλάκι.

        Σε αυτή τη περίπτωση αν δεν μπορούμε να βρούμε κάποια λέξη πληκτρολογούμε "q" και το παιχνίδι τελειώνει.

        ΚΑΛΗ ΔΙΑΣΚΕΔΑΣΗ!!!
    """

def main():
    print("***** SCRABBLE *****")
    print("--------------------")
    print("1: Σκορ")
    print("2: Ρυθμίσεις")
    print("3: Παιχνίδι")
    print("q: Έξοδος")
    print("--------------------")
    x = input("Επιλογή: ")

    while x != '1' and x != '2' and x != '3' and x != 'q':
        print("\n\n\n\n\n")
        print("***** SCRABBLE *****")
        print("--------------------")
        print("1: Σκορ")
        print("2: Ρυθμίσεις")
        print("3: Παιχνίδι")
        print("q: Έξοδος")
        print("--------------------")
        x = input("ΛΑΘΟΣ! Επέλεξε ξανά: ")

    match x:
        case '1':
            show_scores()
        case '2':
            settings()
        case '3':
            game_start()
        case 'q':
            print("\nΕυχαριστούμε που έπαιξες!")
            quit()


def write_score(name):
    if name not in scores:
        scores[name] = 1
    else:
        scores[name] += 1
    with open("scores.txt", 'w') as f:
        json.dump(scores, f)


def read_scores():
    try:
        with open("scores.txt", 'r') as f:
            scores_to_return = json.load(f)
        return scores_to_return
    except IOError:
        # if file does not exist - we have no scores
        return {}


def show_scores():
    print("--------------------")
    print("******* ΣΚΟΡ *******")
    scores_to_print = read_scores()
    for name, score in scores_to_print.items():
        print(name + ": " + str(score) + " νίκες")
    print("--------------------")
    print("1: Επιστροφή στο αρχικό μενού")
    print("q: Έξοδος")
    x = input("Επιλογή: ")

    while x != '1' and x != 'q':
        print("--------------------")
        print("1: Επιστροφή στο αρχικό μενού")
        print("q: Έξοδος")
        x = input("ΛΑΘΟΣ! Επέλεξε ξανά: ")

    match x:
        case '1':
            print("\n\n\n\n\n")
            main()
        case 'q':
            print("\nΕυχαριστούμε που έπαιξες!")
            quit()


def settings():
    print("--------------------")
    print("1: MIN Letters")
    print("2: MAX Letters")
    print("3: SMART")
    algorithm = input("Διάλεξε αλγόριθμο για τον υπολογιστή: ")

    while algorithm != '1' and algorithm != '2' and algorithm != '3':
        print("--------------------")
        print("1: MIN Letters")
        print("2: MAX Letters")
        print("3: SMART")
        algorithm = input("ΛΑΘΟΣ! Επέλεξε ξανά: ")

    pc.algorithm = algorithm
    print("\n\n\n\n\n")
    main()


def game_start():
    print("--------------------")
    name = input("Γράψε το όνομά σου: ")
    player = Human(name)

    game = Game(player, pc)
    game.setup()
    game.run()
    if game.winner == game.player.name:
        write_score(game.winner)

    print("--------------------")
    print("1: Επιστροφή στο αρχικό μενού")
    print("q: Έξοδος")
    x = input("Επιλογή: ")

    while x != '1' and x != 'q':
        print("--------------------")
        print("1: Επιστροφή στο αρχικό μενού")
        print("q: Έξοδος")
        x = input("ΛΑΘΟΣ! Επέλεξε ξανά: ")

    match x:
        case '1':
            print("\n\n\n\n\n")
            main()
        case 'q':
            print("\nΕυχαριστούμε που έπαιξες!")
            quit()


pc = Computer("Η/Υ")
scores = read_scores()
main()
